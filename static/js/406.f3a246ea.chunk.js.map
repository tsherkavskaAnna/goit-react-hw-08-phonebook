{"version":3,"file":"static/js/406.f3a246ea.chunk.js","mappings":"+NACA,EAA+B,mCAA/B,EAA0E,4BAA1E,EAA6G,2BAA7G,EAAgJ,4BAAhJ,EAAoL,4BAApL,EAAyN,6B,SCM1M,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,cAAtBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MAEd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MAEF,IAAK,QACHR,EAASQ,GACT,MAEF,IAAK,WACHN,EAAYM,KAgBlB,OACE,2BACE,qBAASC,UAAWC,EAApB,WACE,eAAID,UAAWC,EAAf,kCACA,kBAAMD,UAAWC,EAAQC,SAZV,SAAAL,GACnBA,EAAMM,iBACNT,EAASU,EAAAA,GAAAA,SAAwB,CAAEhB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAOR,WACE,mBAAOO,UAAWC,EAAlB,kBAEE,kBACED,UAAWC,EACXI,KAAK,OACLjB,KAAK,OACLW,MAAOX,EACPkB,SAAUV,EACVW,YAAY,OACZC,aAAa,MACbC,UAAQ,QAGZ,mBAAOT,UAAWC,EAAlB,mBAEE,kBACED,UAAWC,EACXI,KAAK,QACLjB,KAAK,QACLW,MAAOT,EACPgB,SAAUV,EACVW,YAAY,SACZC,aAAa,MACbC,UAAQ,QAGZ,mBAAOT,UAAWC,EAAlB,sBAEE,kBACED,UAAWC,EACXI,KAAK,WACLjB,KAAK,WACLW,MAAOP,EACPc,SAAUV,EACVW,YAAY,WACZC,aAAa,MACbC,UAAQ,QAGZ,mBAAQT,UAAWC,EAAUI,KAAK,SAAlC","sources":["webpack://react-homework-template/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"registration\":\"RegisterPage_registration__+H6Bz\",\"title\":\"RegisterPage_title__Yjy6g\",\"form\":\"RegisterPage_form__9iStY\",\"label\":\"RegisterPage_label__R5ZZF\",\"input\":\"RegisterPage_input__9WI6M\",\"button\":\"RegisterPage_button__rEbXr\"};","import React, { useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\n\nimport s from './RegisterPage.module.css';\n\nexport default function LoginPage() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event=> {\n    event.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <main>\n      <section className={s.registration}>\n        <h1 className={s.title}>Create your account</h1>\n        <form className={s.form} onSubmit={handleSubmit}>\n          <label className={s.label}>\n            Name\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              placeholder=\"name\"\n              autoComplete=\"off\"\n              required\n            />\n          </label>\n          <label className={s.label}>\n            Email\n            <input\n              className={s.input}\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n              placeholder=\"e-mail\"\n              autoComplete=\"off\"\n              required\n            />\n          </label>\n          <label className={s.label}>\n            Password\n            <input\n              className={s.input}\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n              placeholder=\"password\"\n              autoComplete=\"off\"\n              required\n            />\n          </label>\n          <button className={s.button} type=\"submit\">\n            Sign up\n          </button>\n        </form>\n      </section>\n    </main>\n  );\n}"],"names":["LoginPage","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","event","currentTarget","value","className","s","onSubmit","preventDefault","authOperations","type","onChange","placeholder","autoComplete","required"],"sourceRoot":""}