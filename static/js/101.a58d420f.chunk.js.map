{"version":3,"file":"static/js/101.a58d420f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","pages/ContactsPage/ContactsPage.module.css","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btnAdd\":\"ContactForm_btnAdd__F4QeR\"};","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\n  import 'react-toastify/dist/ReactToastify.css';\nimport s from './ContactForm.module.css';\nimport { addContactThunk } from 'redux/contacts/contacts-operations';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\nimport { useId } from 'react';\n\nconst ContactsForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const id = useId;\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break\n\n        default:\n    }\n    return;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    const newContact = {\n      id,\n      name,\n      number,\n    };\n\n    if (contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n      toast.warning('Name is already in contacts list!')\n    } else {\n      dispatch(addContactThunk(newContact))\n    }\n    reset();\n  }\n\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n\n      <button\n        type=\"submit\"\n        disabled={!name || !number}\n        className={s.btnAdd}\n      >\n        Add Contact\n      </button>\n      <ToastContainer />\n    </form>\n  );\n};\n\nContactsForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n};\n\nexport default ContactsForm;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/contacts/contacts-selectors';\n\nconst Filter = () => { \n  const dispatch =useDispatch();\n  const onFilter = event => dispatch(getFilter(event.target.value))\n\n\nreturn (\n<label>\n    Find contacts by name\n    <br />\n    <input type=\"text\" onChange={onFilter} />\n  </label>\n );\n}\n\n\nexport default Filter\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactList_contactsList__7leRd\",\"contactsItem\":\"ContactList_contactsItem__x8C9b\",\"itemName\":\"ContactList_itemName__6OYsD\",\"btnDelete\":\"ContactList_btnDelete__Eeo9v\"};","import { useDispatch } from 'react-redux';\nimport { deleteContactThunk } from 'redux/contacts/contacts-operations';\nimport s from './ContactList.module.css';\n\n\nexport const ContactItem = ({ contactId, name, number }) => {\n  const dispatch = useDispatch();\n  const idDelete = { contactId, name }\n  \n\n  return (\n    <li className={s.contactsItem}>\n      <p className={s.itemName}>{name}</p>\n      <p className={s.itemName}>{number}</p>\n      <button\n        className={s.btnDelete}\n        type=\"button\"\n        onClick={() => dispatch(deleteContactThunk(idDelete))}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContactsThunk } from 'redux/contacts/contacts-operations';\nimport { getContacts, getFilter } from 'redux/contacts/contacts-selectors';\nimport { ContactItem } from './ContactItem';\n\n\nconst ContactList = () => {\n  const items = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n  \n\n  const getNormalizedItem = () => {\n    const  normalizedFilter = filter.toLowerCase().trim();\n    return items.filter(item => item.name.toLowerCase().includes(normalizedFilter))\n  }\n  const contacts = getNormalizedItem()\n\n    return (\n      <ul className={s.contactsList}>\n        {contacts.map(({ id, name, number }) => {\n          return (\n            <ContactItem\n              key={id}\n              name={name}\n              number={number}\n              id={id}\n            />\n          );\n        })}\n      </ul>\n    );\n  };\n  \n  ContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      })\n    ),\n  };\n  \n  export default ContactList;","// extracted by mini-css-extract-plugin\nexport default {};","import { useDispatch } from 'react-redux';\n\nimport ContactsForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './ContactsPage.module.css'\nimport { getContactsThunk } from 'redux/contacts/contacts-operations';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n\n  dispatch(getContactsThunk());\n\n  return (\n    <main>\n      <section className={s.phonebook}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactsForm />\n        <h2 className={s.title}>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </section>\n    </main>\n  );\n}"],"names":["getContacts","state","contacts","items","getFilter","filter","useState","name","setName","number","setNumber","id","useId","useSelector","dispatch","useDispatch","handleChange","event","target","value","reset","onSubmit","preventDefault","newContact","find","contact","toLowerCase","toast","addContactThunk","className","s","type","pattern","title","required","onChange","disabled","ContactItem","contactId","idDelete","onClick","deleteContactThunk","useEffect","getContactsThunk","normalizedFilter","trim","item","includes","getNormalizedItem","map","ContactsPage"],"sourceRoot":""}