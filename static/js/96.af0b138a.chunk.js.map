{"version":3,"file":"static/js/96.af0b138a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","components/Filter/Filter.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactForm_button__eSwX9\",\"form\":\"ContactForm_form__dhl+T\",\"field\":\"ContactForm_field__DAXEv\"};","import React, { useState } from 'react';\nimport { useGetContactsQuery, useAddContactMutation } from 'redux/contacts/contacts-slice';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport s from './ContactForm.module.css';\nimport { nanoid } from 'nanoid';\n\nconst ContactsForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const id = nanoid();\n\n  const { data } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break\n\n        default:\n    }\n    return;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    const newContact = {\n      id,\n      name,\n      number,\n    };\n\n    if (data.some(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n      toast.warning('Name is already in contacts list!')\n    } else {\n      addContact(newContact)\n      toast.success('New contact is added a phonebook')\n    }\n    reset();\n  }\n\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form className={s.form} action=\"submit\" onSubmit={handleSubmit}>\n        <TextField\n          label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          autoComplete=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          required\n          sx={{ mb: '15px' }}\n        />\n        <TextField\n          label=\"Number\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          autoComplete=\"Number\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          required\n          sx={{ mb: '15px' }}\n        />\n\n        <div className={s.button}>\n          <Button type=\"submit\" variant=\"contained\" size=\"medium\">\n            Add Contact\n          </Button>\n        </div>\n      </form>\n    </>\n    \n  );\n};\n\nContactsForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n};\n\nexport default ContactsForm;\n","import React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filter-slice';\nimport s from \"../ContactForm/ContactForm.module.css\"\n\n\nconst Filter = () => { \n  const dispatch =useDispatch();\n  const filter = useSelector(state => state.filter)\n\n\n  const onFilter = event => dispatch(changeFilter(event.target.value))\n\n\nreturn (\n<div className={s.field}>\n      <TextField\n        label=\" Find contacts by name\"\n        type=\"search\"\n        variant=\"filled\"\n        value={filter}\n        onChange={onFilter}\n        sx={{ width: 400 }}\n      />\n    </div>\n );\n}\n\n\nexport default Filter\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactList_contactsList__7leRd\",\"contactsItem\":\"ContactList_contactsItem__x8C9b\",\"itemName\":\"ContactList_itemName__6OYsD\",\"btnDelete\":\"ContactList_btnDelete__Eeo9v\"};","import { useDeleteContactMutation } from 'redux/contacts/contacts-slice';\nimport s from './ContactList.module.css';\n\n\nexport const ContactItem = ({ id, name, number }) => {\n  const [deleteContact] = useDeleteContactMutation();\n\n\n  return (\n    <li className={s.contactsItem}>\n      <p className={s.itemName}>{name}</p>\n      <p className={s.itemName}>{number}</p>\n      <button\n        className={s.btnDelete}\n        type=\"button\"\n        onClick={() => (deleteContact(id))}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport { useGetContactsQuery } from 'redux/contacts/contacts-slice';\nimport { authSelectors } from 'redux/auth';\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ContactItem } from './ContactItem';\n\n\nconst ContactList = () => {\n  const { data: contacts, isLoading, refetch } = useGetContactsQuery();\n  const filter = useSelector(state => state.filter);\n  \n  const normalizedFilter = filter.toLowerCase().trim();\n  const visibleContacts = contacts?.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n  \n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  \n  useEffect(() => {\n\n    if(isLoggedIn) {\n      refetch();\n    }\n  }, [refetch, isLoggedIn])\n    \n  return (\n      <div className={s.container}>\n      <ul className={s.contactsList}>\n        {isLoading && <p>Loading...</p>}\n        {visibleContacts && visibleContacts.map(({ id, name, number }) => {\n          return (\n            <ContactItem\n              key={id}\n              name={name}\n              number={number}\n              id={id}\n            />\n          );\n        })}\n      </ul>\n      </div>\n    );\n  };\n  \n  ContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      })\n    ),\n  };\n  \n  export default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactsPage_title__P3MkR\"};","import ContactsForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport s from './ContactsPage.module.css';\n\n\nconst ContactsPage = () => { \n\n  return (\n      <section className={s.phonebook}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactsForm />\n        <h2 className={s.title}>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </section>\n     \n  );\n};\n\nexport default ContactsPage;"],"names":["useState","name","setName","number","setNumber","id","nanoid","data","useGetContactsQuery","useAddContactMutation","addContact","handleChange","event","target","value","reset","className","s","action","onSubmit","preventDefault","newContact","some","contact","toLowerCase","toast","TextField","label","type","onChange","autoComplete","pattern","required","sx","mb","Button","variant","size","dispatch","useDispatch","filter","useSelector","state","changeFilter","width","ContactItem","useDeleteContactMutation","deleteContact","onClick","contacts","isLoading","refetch","normalizedFilter","trim","visibleContacts","includes","isLoggedIn","authSelectors","useEffect","map"],"sourceRoot":""}